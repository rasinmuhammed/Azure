{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_SQL_RAW_QUIZ",
						"type": "DatasetReference"
					},
					"name": "Quiz"
				},
				{
					"dataset": {
						"referenceName": "DS_SQL_RAW_QUIZ",
						"type": "DatasetReference"
					},
					"name": "Attempts"
				},
				{
					"dataset": {
						"referenceName": "DS_SQL_RAW_QUIZ",
						"type": "DatasetReference"
					},
					"name": "Users"
				},
				{
					"dataset": {
						"referenceName": "DS_SQL_RAW_QUIZ",
						"type": "DatasetReference"
					},
					"name": "Results"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "formattedDate"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as string,",
				"          title as string,",
				"          question as string,",
				"          OPTION1 as string,",
				"          {option 2} as string,",
				"          {option 3} as string,",
				"          {option 4} as string,",
				"          answer as string,",
				"          {questions'][0]['_id_$oid} as string,",
				"          timer as string,",
				"          hasTimer as boolean,",
				"          quizId as string,",
				"          password as string,",
				"          createdBy as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Quiz",
				"source(output(",
				"          id as string,",
				"          user as string,",
				"          quizId as string,",
				"          questionId as string,",
				"          answer as string,",
				"          answersId as string,",
				"          date as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Attempts",
				"source(output(",
				"          ID as string,",
				"          username as string,",
				"          email as string,",
				"          password as string,",
				"          role as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Users",
				"source(output(",
				"          id as string,",
				"          userid as string,",
				"          quizid as string,",
				"          questionid as string,",
				"          answer as string,",
				"          answerid as string,",
				"          score as string,",
				"          submissionDate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Results",
				"Attempts derive(date = toDate(toTimestamp(toInteger(toLong(date) / toLong( 1000 ))* 1000l))) ~> formattedDate",
				"Users select(mapColumn(",
				"          ID,",
				"          Name = username,",
				"          email,",
				"          role",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1"
			]
		}
	}
}